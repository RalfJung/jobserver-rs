var N = null;var searchIndex = {};
searchIndex["jobserver"]={"doc":"An implementation of the GNU make jobserver.","items":[[3,"Client","jobserver","A client of a jobserver",N,N],[3,"Acquired","","An acquired token from a jobserver.",N,N],[3,"HelperThread","","Structure returned from `Client::into_helper_thread` to manage the lifetime of the helper thread returned, see those associated docs for more info.",N,N],[11,"new","","Creates a new jobserver initialized with the given parallelism limit.",0,[[["usize"]],["result",["client"]]]],[11,"from_env","","Attempts to connect to the jobserver specified in this process's environment.",0,[[],["option",["client"]]]],[11,"acquire","","Acquires a token from this jobserver client.",0,[[["self"]],["result",["acquired"]]]],[11,"configure","","Configures a child process to have access to this client's jobserver as well.",0,[[["self"],["command"]]]],[11,"into_helper_thread","","Converts this `Client` into a helper thread to deal with a blocking `acquire` function a little more easily.",0,[[["self"],["f"]],["result",["helperthread"]]]],[11,"request_token","","Request that the helper thread acquires a token, eventually calling the original closure with a token when it's available.",1,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"clone","","",0,[[["self"]],["client"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Client"],[3,"HelperThread"],[3,"Acquired"]]};
initSearch(searchIndex);
